{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Hello World! This wiki is more like a notepad for me. If you break something, it's not my fault. But I can help you.","title":"Home"},{"location":"#home","text":"Hello World! This wiki is more like a notepad for me. If you break something, it's not my fault. But I can help you.","title":"Home"},{"location":"links/","text":"Useful Links https://creativeandcritical.net/help-articles/how-to-safely-delete-swap-volume-extend-root-volume-fedora-20","title":"Useful Links"},{"location":"links/#useful-links","text":"https://creativeandcritical.net/help-articles/how-to-safely-delete-swap-volume-extend-root-volume-fedora-20","title":"Useful Links"},{"location":"Baremetal/rpi/","text":"Links https://stackoverflow.com/questions/43358218/multicore-arm-assembly https://stackoverflow.com/questions/20055754/arm-start-wakeup-bringup-the-other-cpu-cores-aps-and-pass-execution-start-addre https://stackoverflow.com/questions/51862529/arm-bare-metal-multi-core-core-selection https://stackoverflow.com/questions/11894059/atomic-operations-in-arm https://stackoverflow.com/questions/20111906/arm-assembly-inline-c-mutex-impelmentation https://stackoverflow.com/questions/42698277/arm-cortex-m4-mutex-lock-dmb-instruction https://stackoverflow.com/questions/49989123/atomicity-of-32bit-read-on-multicore-cpu https://raspberrypi.stackexchange.com/questions/39825/possible-to-do-bare-metal-programming-on-pi https://github.com/dwelch67/raspberrypi/tree/ec6b9f1b6a2d38d56f0a4a43683db1be01280ae2/multi00 https://gist.github.com/hdznrrd/4032002 https://github.com/payne92/bare-metal-arm/blob/master/MKL25Z4.h https://wiki-archive.linaro.org/Resources/HowTo/Qemu-beagleboard https://developer.arm.com/documentation/ddi0487/ga/ https://gitlab.com/cours-hefr/3e/ps5/-/tree/master https://github.com/synthetos/PiOCD/wiki/Using-a-Raspberry-Pi-as-a-JTAG-Dongle http://www.doulos.com/knowhow/arm-embedded/implementing-semaphores-on-arm-processors/ https://metebalci.com/blog/bare-metal-raspberry-pi-3b-jtag/ https://www.design-reuse.com/articles/38128/method-for-booting-arm-based-multi-core-socs.html https://www.ti.com/lit/an/sprab27b/sprab27b.pdf?ts=1612430308678 https://acpica.org/sites/acpica/files/MP%20Startup%20for%20ARM%20platforms.docx https://developer.arm.com/documentation/dht0008/a/arm-synchronization-primitives/practical-uses/implementing-a-mutex https://developer.arm.com/documentation/dht0008/a/arm-synchronization-primitives/practical-uses/power-saving-features?lang=en https://www.keil.com/support/docs/4063.htm https://elixir.bootlin.com/linux/v3.5/source/kernel/lockdep.c#L3693 https://www.raspberrypi.org/documentation/configuration/device-tree.md#part3.1 https://www.keil.com/support/man/docs/armasm/armasm_dom1361289880404.htm https://balau82.wordpress.com/2010/02/28/hello-world-for-bare-metal-arm-using-qemu/ https://www.raspberrypi.org/forums/viewtopic.php?t=217581 https://www.raspberrypi.org/forums/viewtopic.php?t=185264 https://www.raspberrypi.org/forums/viewtopic.php?f=72&t=201556 https://www.raspberrypi.org/forums/viewtopic.php?t=106403 https://github.com/rsta2/circle https://github.com/dwelch67/raspberrypi https://github.com/bztsrc/raspi3-tutorial https://github.com/vanvught/rpidmx512/ https://github.com/kawa-yoiko/AMPi https://github.com/fbergama/pigfx https://github.com/forkachild/NarcOS https://github.com/jameswalmsley/RaspberryPi-FreeRTOS https://github.com/jameswalmsley/bitthunder https://github.com/LdB-ECM/Raspberry-Pi https://github.com/LdB-ECM/Raspberry-Pi-Multicore https://github.com/PicoCPP/RPI-pico-FreeRTOS https://github.com/bitbank2/bbgfx https://github.com/brianwiddas/pi-baremetal https://github.com/dwelch67/raspberrypi https://github.com/sokoide/rpi-baremetal Other https://github.com/ag14774/Realview-PB-A8-Kernel https://github.com/u-boot/u-boot https://github.com/strawberryhacker/vanilla/blob/master/kernel/src/kernel/context.s https://github.com/torvalds/linux/tree/master/include/linux","title":"Baremetal on Raspberry Pi"},{"location":"Baremetal/rpi/#links","text":"https://stackoverflow.com/questions/43358218/multicore-arm-assembly https://stackoverflow.com/questions/20055754/arm-start-wakeup-bringup-the-other-cpu-cores-aps-and-pass-execution-start-addre https://stackoverflow.com/questions/51862529/arm-bare-metal-multi-core-core-selection https://stackoverflow.com/questions/11894059/atomic-operations-in-arm https://stackoverflow.com/questions/20111906/arm-assembly-inline-c-mutex-impelmentation https://stackoverflow.com/questions/42698277/arm-cortex-m4-mutex-lock-dmb-instruction https://stackoverflow.com/questions/49989123/atomicity-of-32bit-read-on-multicore-cpu https://raspberrypi.stackexchange.com/questions/39825/possible-to-do-bare-metal-programming-on-pi https://github.com/dwelch67/raspberrypi/tree/ec6b9f1b6a2d38d56f0a4a43683db1be01280ae2/multi00 https://gist.github.com/hdznrrd/4032002 https://github.com/payne92/bare-metal-arm/blob/master/MKL25Z4.h https://wiki-archive.linaro.org/Resources/HowTo/Qemu-beagleboard https://developer.arm.com/documentation/ddi0487/ga/ https://gitlab.com/cours-hefr/3e/ps5/-/tree/master https://github.com/synthetos/PiOCD/wiki/Using-a-Raspberry-Pi-as-a-JTAG-Dongle http://www.doulos.com/knowhow/arm-embedded/implementing-semaphores-on-arm-processors/ https://metebalci.com/blog/bare-metal-raspberry-pi-3b-jtag/ https://www.design-reuse.com/articles/38128/method-for-booting-arm-based-multi-core-socs.html https://www.ti.com/lit/an/sprab27b/sprab27b.pdf?ts=1612430308678 https://acpica.org/sites/acpica/files/MP%20Startup%20for%20ARM%20platforms.docx https://developer.arm.com/documentation/dht0008/a/arm-synchronization-primitives/practical-uses/implementing-a-mutex https://developer.arm.com/documentation/dht0008/a/arm-synchronization-primitives/practical-uses/power-saving-features?lang=en https://www.keil.com/support/docs/4063.htm https://elixir.bootlin.com/linux/v3.5/source/kernel/lockdep.c#L3693 https://www.raspberrypi.org/documentation/configuration/device-tree.md#part3.1 https://www.keil.com/support/man/docs/armasm/armasm_dom1361289880404.htm https://balau82.wordpress.com/2010/02/28/hello-world-for-bare-metal-arm-using-qemu/ https://www.raspberrypi.org/forums/viewtopic.php?t=217581 https://www.raspberrypi.org/forums/viewtopic.php?t=185264 https://www.raspberrypi.org/forums/viewtopic.php?f=72&t=201556 https://www.raspberrypi.org/forums/viewtopic.php?t=106403 https://github.com/rsta2/circle https://github.com/dwelch67/raspberrypi https://github.com/bztsrc/raspi3-tutorial https://github.com/vanvught/rpidmx512/ https://github.com/kawa-yoiko/AMPi https://github.com/fbergama/pigfx https://github.com/forkachild/NarcOS https://github.com/jameswalmsley/RaspberryPi-FreeRTOS https://github.com/jameswalmsley/bitthunder https://github.com/LdB-ECM/Raspberry-Pi https://github.com/LdB-ECM/Raspberry-Pi-Multicore https://github.com/PicoCPP/RPI-pico-FreeRTOS https://github.com/bitbank2/bbgfx https://github.com/brianwiddas/pi-baremetal https://github.com/dwelch67/raspberrypi https://github.com/sokoide/rpi-baremetal","title":"Links"},{"location":"Baremetal/rpi/#other","text":"https://github.com/ag14774/Realview-PB-A8-Kernel https://github.com/u-boot/u-boot https://github.com/strawberryhacker/vanilla/blob/master/kernel/src/kernel/context.s https://github.com/torvalds/linux/tree/master/include/linux","title":"Other"},{"location":"Docker/crossbuild/","text":"Source: - https://mirailabs.io/blog/multiarch-docker-with-buildx/ - https://docs.docker.com/buildx/working-with-buildx/ Enable buildx $ export DOCKER_CLI_EXPERIMENTAL=enabled $ docker buildx version github.com/docker/buildx v0.3.1-tp-docker 6db68d029599c6710a32aa7adcba8e5a344795a7 Enable binfmt (Linux only) $ docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64 $ ls -al /proc/sys/fs/binfmt_misc/ total 0 drwxr-xr-x. 2 root root 0 May 17 19:49 . dr-xr-xr-x. 1 root root 0 May 17 19:38 .. -rw-r--r--. 1 root root 0 May 17 19:49 qemu-aarch64 -rw-r--r--. 1 root root 0 May 17 19:49 qemu-arm -rw-r--r--. 1 root root 0 May 17 19:49 qemu-ppc64le -rw-r--r--. 1 root root 0 May 17 19:49 qemu-riscv64 -rw-r--r--. 1 root root 0 May 17 19:49 qemu-s390x --w-------. 1 root root 0 May 17 19:49 register -rw-r--r--. 1 root root 0 May 17 19:49 status $ cat /proc/sys/fs/binfmt_misc/qemu-aarch64 enabled interpreter /usr/bin/qemu-aarch64 flags: OCF offset 0 magic 7f454c460201010000000000000000000200b7 mask ffffffffffffff00fffffffffffffffffeffff Create the multi-arch builder $ docker buildx ls NAME/NODE DRIVER/ENDPOINT STATUS PLATFORMS default * docker default default running linux/amd64, linux/386 $ docker buildx create --use --name cross-builder cross-builder $ docker buildx ls NAME/NODE DRIVER/ENDPOINT STATUS PLATFORMS cross-builder * docker-container cross-builder0 unix:///var/run/docker.sock inactive default docker default default running linux/amd64, linux/38 Tests 1) Create a Go file $ cat hello.go package main import ( \"fmt\" \"runtime\" ) func main() { fmt.Printf(\"Hello, %s!\\n\", runtime.GOARCH) } 2) Create a Dockerfile FROM golang:alpine AS builder RUN mkdir /app ADD . /app/ WORKDIR /app RUN go build -o hello . FROM alpine RUN mkdir /app WORKDIR /app COPY --from=builder /app/hello . CMD [\"./hello\"] 3) Build using buildx $ docker buildx build -t hello-multi-arch --platform=linux/arm,linux/arm64,linux/amd64,windows/amd64 . Set the default builder to buildx https://docs.docker.com/buildx/working-with-buildx/#set-buildx-as-the-default-builder","title":"Build multi-arch Docker images"},{"location":"Docker/crossbuild/#enable-buildx","text":"$ export DOCKER_CLI_EXPERIMENTAL=enabled $ docker buildx version github.com/docker/buildx v0.3.1-tp-docker 6db68d029599c6710a32aa7adcba8e5a344795a7","title":"Enable buildx"},{"location":"Docker/crossbuild/#enable-binfmt-linux-only","text":"$ docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64 $ ls -al /proc/sys/fs/binfmt_misc/ total 0 drwxr-xr-x. 2 root root 0 May 17 19:49 . dr-xr-xr-x. 1 root root 0 May 17 19:38 .. -rw-r--r--. 1 root root 0 May 17 19:49 qemu-aarch64 -rw-r--r--. 1 root root 0 May 17 19:49 qemu-arm -rw-r--r--. 1 root root 0 May 17 19:49 qemu-ppc64le -rw-r--r--. 1 root root 0 May 17 19:49 qemu-riscv64 -rw-r--r--. 1 root root 0 May 17 19:49 qemu-s390x --w-------. 1 root root 0 May 17 19:49 register -rw-r--r--. 1 root root 0 May 17 19:49 status $ cat /proc/sys/fs/binfmt_misc/qemu-aarch64 enabled interpreter /usr/bin/qemu-aarch64 flags: OCF offset 0 magic 7f454c460201010000000000000000000200b7 mask ffffffffffffff00fffffffffffffffffeffff","title":"Enable binfmt (Linux only)"},{"location":"Docker/crossbuild/#create-the-multi-arch-builder","text":"$ docker buildx ls NAME/NODE DRIVER/ENDPOINT STATUS PLATFORMS default * docker default default running linux/amd64, linux/386 $ docker buildx create --use --name cross-builder cross-builder $ docker buildx ls NAME/NODE DRIVER/ENDPOINT STATUS PLATFORMS cross-builder * docker-container cross-builder0 unix:///var/run/docker.sock inactive default docker default default running linux/amd64, linux/38","title":"Create the multi-arch builder"},{"location":"Docker/crossbuild/#tests","text":"1) Create a Go file $ cat hello.go package main import ( \"fmt\" \"runtime\" ) func main() { fmt.Printf(\"Hello, %s!\\n\", runtime.GOARCH) } 2) Create a Dockerfile FROM golang:alpine AS builder RUN mkdir /app ADD . /app/ WORKDIR /app RUN go build -o hello . FROM alpine RUN mkdir /app WORKDIR /app COPY --from=builder /app/hello . CMD [\"./hello\"] 3) Build using buildx $ docker buildx build -t hello-multi-arch --platform=linux/arm,linux/arm64,linux/amd64,windows/amd64 .","title":"Tests"},{"location":"Docker/crossbuild/#set-the-default-builder-to-buildx","text":"https://docs.docker.com/buildx/working-with-buildx/#set-buildx-as-the-default-builder","title":"Set the default builder to buildx"},{"location":"FFmpeg/remove-segments/","text":"Locate segments Locate the start and end of the segments you want to delete $ ffmpeg -y -ss 00:25:53.30 -i abc.mkv -frames:v 1 out.jpg $ ffmpeg -y -ss 00:25:59.28 -i abc.mkv -frames:v 1 out.jpg Segment to delete: 00:25:53.30 to 00:25:59.28 Create segments Create segments a and c (the video without the segments you want to delete) $ ffmpeg -i abc.mkv -map 0 -c copy -t 00:25:53.30 a.mkv $ ffmpeg -ss 00:25:59.28 -i abc.mkv -map 0 -c copy c.mkv Join segments Create a file listing the segments created previously $ cat files.txt file 'a.mkv' file 'c.mkv' Concatenate the segments $ ffmpeg -f concat -i files.txt -map 0 -c copy ac.mkv","title":"Remove segments"},{"location":"FFmpeg/remove-segments/#locate-segments","text":"Locate the start and end of the segments you want to delete $ ffmpeg -y -ss 00:25:53.30 -i abc.mkv -frames:v 1 out.jpg $ ffmpeg -y -ss 00:25:59.28 -i abc.mkv -frames:v 1 out.jpg Segment to delete: 00:25:53.30 to 00:25:59.28","title":"Locate segments"},{"location":"FFmpeg/remove-segments/#create-segments","text":"Create segments a and c (the video without the segments you want to delete) $ ffmpeg -i abc.mkv -map 0 -c copy -t 00:25:53.30 a.mkv $ ffmpeg -ss 00:25:59.28 -i abc.mkv -map 0 -c copy c.mkv","title":"Create segments"},{"location":"FFmpeg/remove-segments/#join-segments","text":"Create a file listing the segments created previously $ cat files.txt file 'a.mkv' file 'c.mkv' Concatenate the segments $ ffmpeg -f concat -i files.txt -map 0 -c copy ac.mkv","title":"Join segments"},{"location":"Operating-Systems/Linux/docker-centos/","text":"Install Docker Follow https://docs.docker.com/engine/install/centos/#install-docker-engine Install Docker Compose Follow https://docs.docker.com/compose/install/#install-compose Setup Firewall From https://serverfault.com/a/994704 1) Check what interface docker is using, e.g. 'docker0' ip link show 2) Check available firewalld zones, e.g. 'public' sudo firewall-cmd --get-active-zones 3) Check what zone the docker interface it bound to, most likely 'no zone' yet sudo firewall-cmd --get-zone-of-interface=docker0 4) So add the 'docker0' interface to the 'public' zone. Changes will be visible only after firewalld reload sudo nmcli connection modify docker0 connection.zone public 5) Masquerading allows for docker ingress and egress (this is the juicy bit) sudo firewall-cmd --zone=public --add-masquerade --permanent 6) Reload firewalld and dockerd sudo firewall-cmd --reload sudo systemctl restart docker 7) Test ping and DNS works: docker run busybox ping -c 1 8.8.8.8 docker run busybox ping -c 1 vinrobot.net docker run busybox cat /etc/resolv.conf","title":"Install Docker"},{"location":"Operating-Systems/Linux/docker-centos/#install-docker","text":"Follow https://docs.docker.com/engine/install/centos/#install-docker-engine","title":"Install Docker"},{"location":"Operating-Systems/Linux/docker-centos/#install-docker-compose","text":"Follow https://docs.docker.com/compose/install/#install-compose","title":"Install Docker Compose"},{"location":"Operating-Systems/Linux/docker-centos/#setup-firewall","text":"From https://serverfault.com/a/994704 1) Check what interface docker is using, e.g. 'docker0' ip link show 2) Check available firewalld zones, e.g. 'public' sudo firewall-cmd --get-active-zones 3) Check what zone the docker interface it bound to, most likely 'no zone' yet sudo firewall-cmd --get-zone-of-interface=docker0 4) So add the 'docker0' interface to the 'public' zone. Changes will be visible only after firewalld reload sudo nmcli connection modify docker0 connection.zone public 5) Masquerading allows for docker ingress and egress (this is the juicy bit) sudo firewall-cmd --zone=public --add-masquerade --permanent 6) Reload firewalld and dockerd sudo firewall-cmd --reload sudo systemctl restart docker 7) Test ping and DNS works: docker run busybox ping -c 1 8.8.8.8 docker run busybox ping -c 1 vinrobot.net docker run busybox cat /etc/resolv.conf","title":"Setup Firewall"},{"location":"Operating-Systems/Linux/pxe-centos/","text":"Configure DHCP Source: CentOS 8 : PXE Boot Subnet: 192.168.20.0/24 Install DHCP-Server # dnf -y install dhcp-server Setup DHCP-Server (1/2) Setup a simple DHCP server and tests it. # cat /etc/dhcp/dhcpd.conf option domain-name \"vr.local\"; option domain-name-servers 192.168.20.2; default-lease-time 600; max-lease-time 7200; authoritative; subnet 192.168.20.0 netmask 255.255.255.0 { range dynamic-bootp 192.168.20.200 192.168.20.254; option broadcast-address 192.168.20.255; option routers 192.168.20.2; } # systemctl enable --now dhcpd Setup DHCP-Server (2/2) Add the PXE configuration to the DHCP. # cat /etc/dhcp/dhcpd.conf ... option space pxelinux; option pxelinux.magic code 208 = string; option pxelinux.configfile code 209 = text; option pxelinux.pathprefix code 210 = text; option pxelinux.reboottime code 211 = unsigned integer 32; option architecture-type code 93 = unsigned integer 16; subnet 192.168.20.0 netmask 255.255.255.0 { ... class \"pxeclients\" { match if substring (option vendor-class-identifier, 0, 9) = \"PXEClient\"; next-server 192.168.20.50; if option architecture-type = 00:07 { filename \"BOOTX64.EFI\"; } else { filename \"syslinux/pxelinux.0\"; } } } # systemctl restart dhcpd Configure TFTP Install TFTP-Server # dnf -y install tftp-server # systemctl enable --now tftp.socket # firewall-cmd --add-service=tftp --permanent # firewall-cmd --reload Configure SYSLINUX Configure the SYSLINUX bootloader. # dnf -y install syslinux # mkdir /var/lib/tftpboot/syslinux # cp /usr/share/syslinux/{pxelinux.0,menu.c32,vesamenu.c32,ldlinux.c32,libcom32.c32,libutil.c32} /var/lib/tftpboot/syslinux/ # mkdir /var/lib/tftpboot/syslinux/pxelinux.cfg # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default default vesamenu.c32 prompt 1 timeout 60 display boot.msg label local menu label Boot from ^local drive localboot 0xffff Older versions: - SYSLINUX official releases - SYSLINUX RPM packages Configure GRUB2 (WIP) https://docs.oracle.com/cd/E64076_01/E64078/html/vmiug-appendix-pxe-boot.html#vmiug-install-pxe-uefi-setup https://xenappblog.com/2018/automatically-install-vmware-esxi-6-7/ https://www.server-world.info/en/note?os=CentOS_8&p=pxe&f=3 http://www.manobit.com/pxe-multi-boot-server-using-grub2-on-mikrotik-routeros-bios-and-efi-support/#BIOSUEFI https://docs.oracle.com/cd/E64076_01/E64078/html/vmiug-appendix-pxe-boot.html https://communities.vmware.com/thread/520508 Configure iPXE (WIP) https://ipxe.org/howto/chainloading https://ipxe.org/cfg/platform https://gist.github.com/nemf/3794614 https://gist.github.com/robinsmidsrod/08105908079357b2dab5 https://forum.ipxe.org/showthread.php?tid=1123 Add systems CentOS 8 Mount CentOS 8 ISO: # cat /etc/fstab ... /var/iso/CentOS-8.1.1911-x86_64-dvd1.iso /mnt/centos8 iso9660 loop,ro 0 0 # mkdir /var/lib/tftpboot/centos8 /mnt/centos8 # mount -a # cp /mnt/centos8/images/pxeboot/{vmlinuz,initrd.img} /var/lib/tftpboot/centos8/ Add menus to SYSLINUX: # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default ... label linux menu label ^Install CentOS 8 menu default kernel centos8/vmlinuz append initrd=centos8/initrd.img ip=dhcp inst.repo=http://192.168.20.50/centos8 label vesa menu label Install CentOS 8 with ^basic video driver kernel centos8/vmlinuz append initrd=centos8/initrd.img ip=dhcp inst.xdriver=vesa nomodeset inst.repo=http://192.168.20.50/centos8 label rescue menu label ^Rescue installed system kernel centos8/vmlinuz append initrd=centos8/initrd.img rescue label local ... Provide image files through Apache: # cat /etc/httpd/conf.d/pxeboot.conf ... Alias /centos8 /mnt/centos8 <Directory /mnt/centos8> Options Indexes FollowSymLinks Require ip 127.0.0.1 192.168.20.0/24 </Directory> ... VMware ESXi 6.0 Source: Installing ESXi Using PXE Tested SYSLINUX versions: 3.86, 4.07 (with gpxelinux.0) Mount VMware ESXi 6.0 ISO: # cat /etc/fstab ... /var/iso/VMware-ESXi-6.0.0.iso /mnt/vmware-esxi-6 iso9660 loop,ro 0 0 # mkdir /var/lib/tftpboot/vmware-esxi-6 /mnt/vmware-esxi-6 # mount -a # cp /mnt/vmware-esxi-6/{mboot.c32,boot.cfg} /var/lib/tftpboot/vmware-esxi-6/ # vim /var/lib/tftpboot/vmware-esxi-6u3-hpe/boot.cfg Set prefix=http://192.168.20.50/vmware-esxi-6/ And remove \"/\" from kernel and modules Add menus to SYSLINUX: # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default ... label vwareesxi6 menu label Install VMware ESXi 6.0 kernel vmware-esxi-6/mboot.c32 append -c vmware-esxi-6/boot.cfg ipappend 2 label local ... Provide image files through Apache: # cat /etc/httpd/conf.d/pxeboot.conf ... Alias /vmware-esxi-6 /mnt/vmware-esxi-6 <Directory /mnt/vmware-esxi-6> Options Indexes FollowSymLinks Require ip 127.0.0.1 192.168.20.0/24 </Directory> ...","title":"Install a complete PXE server"},{"location":"Operating-Systems/Linux/pxe-centos/#configure-dhcp","text":"Source: CentOS 8 : PXE Boot Subnet: 192.168.20.0/24","title":"Configure DHCP"},{"location":"Operating-Systems/Linux/pxe-centos/#install-dhcp-server","text":"# dnf -y install dhcp-server","title":"Install DHCP-Server"},{"location":"Operating-Systems/Linux/pxe-centos/#setup-dhcp-server-12","text":"Setup a simple DHCP server and tests it. # cat /etc/dhcp/dhcpd.conf option domain-name \"vr.local\"; option domain-name-servers 192.168.20.2; default-lease-time 600; max-lease-time 7200; authoritative; subnet 192.168.20.0 netmask 255.255.255.0 { range dynamic-bootp 192.168.20.200 192.168.20.254; option broadcast-address 192.168.20.255; option routers 192.168.20.2; } # systemctl enable --now dhcpd","title":"Setup DHCP-Server (1/2)"},{"location":"Operating-Systems/Linux/pxe-centos/#setup-dhcp-server-22","text":"Add the PXE configuration to the DHCP. # cat /etc/dhcp/dhcpd.conf ... option space pxelinux; option pxelinux.magic code 208 = string; option pxelinux.configfile code 209 = text; option pxelinux.pathprefix code 210 = text; option pxelinux.reboottime code 211 = unsigned integer 32; option architecture-type code 93 = unsigned integer 16; subnet 192.168.20.0 netmask 255.255.255.0 { ... class \"pxeclients\" { match if substring (option vendor-class-identifier, 0, 9) = \"PXEClient\"; next-server 192.168.20.50; if option architecture-type = 00:07 { filename \"BOOTX64.EFI\"; } else { filename \"syslinux/pxelinux.0\"; } } } # systemctl restart dhcpd","title":"Setup DHCP-Server (2/2)"},{"location":"Operating-Systems/Linux/pxe-centos/#configure-tftp","text":"","title":"Configure TFTP"},{"location":"Operating-Systems/Linux/pxe-centos/#install-tftp-server","text":"# dnf -y install tftp-server # systemctl enable --now tftp.socket # firewall-cmd --add-service=tftp --permanent # firewall-cmd --reload","title":"Install TFTP-Server"},{"location":"Operating-Systems/Linux/pxe-centos/#configure-syslinux","text":"Configure the SYSLINUX bootloader. # dnf -y install syslinux # mkdir /var/lib/tftpboot/syslinux # cp /usr/share/syslinux/{pxelinux.0,menu.c32,vesamenu.c32,ldlinux.c32,libcom32.c32,libutil.c32} /var/lib/tftpboot/syslinux/ # mkdir /var/lib/tftpboot/syslinux/pxelinux.cfg # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default default vesamenu.c32 prompt 1 timeout 60 display boot.msg label local menu label Boot from ^local drive localboot 0xffff Older versions: - SYSLINUX official releases - SYSLINUX RPM packages","title":"Configure SYSLINUX"},{"location":"Operating-Systems/Linux/pxe-centos/#configure-grub2-wip","text":"https://docs.oracle.com/cd/E64076_01/E64078/html/vmiug-appendix-pxe-boot.html#vmiug-install-pxe-uefi-setup https://xenappblog.com/2018/automatically-install-vmware-esxi-6-7/ https://www.server-world.info/en/note?os=CentOS_8&p=pxe&f=3 http://www.manobit.com/pxe-multi-boot-server-using-grub2-on-mikrotik-routeros-bios-and-efi-support/#BIOSUEFI https://docs.oracle.com/cd/E64076_01/E64078/html/vmiug-appendix-pxe-boot.html https://communities.vmware.com/thread/520508","title":"Configure GRUB2 (WIP)"},{"location":"Operating-Systems/Linux/pxe-centos/#configure-ipxe-wip","text":"https://ipxe.org/howto/chainloading https://ipxe.org/cfg/platform https://gist.github.com/nemf/3794614 https://gist.github.com/robinsmidsrod/08105908079357b2dab5 https://forum.ipxe.org/showthread.php?tid=1123","title":"Configure iPXE (WIP)"},{"location":"Operating-Systems/Linux/pxe-centos/#add-systems","text":"","title":"Add systems"},{"location":"Operating-Systems/Linux/pxe-centos/#centos-8","text":"Mount CentOS 8 ISO: # cat /etc/fstab ... /var/iso/CentOS-8.1.1911-x86_64-dvd1.iso /mnt/centos8 iso9660 loop,ro 0 0 # mkdir /var/lib/tftpboot/centos8 /mnt/centos8 # mount -a # cp /mnt/centos8/images/pxeboot/{vmlinuz,initrd.img} /var/lib/tftpboot/centos8/ Add menus to SYSLINUX: # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default ... label linux menu label ^Install CentOS 8 menu default kernel centos8/vmlinuz append initrd=centos8/initrd.img ip=dhcp inst.repo=http://192.168.20.50/centos8 label vesa menu label Install CentOS 8 with ^basic video driver kernel centos8/vmlinuz append initrd=centos8/initrd.img ip=dhcp inst.xdriver=vesa nomodeset inst.repo=http://192.168.20.50/centos8 label rescue menu label ^Rescue installed system kernel centos8/vmlinuz append initrd=centos8/initrd.img rescue label local ... Provide image files through Apache: # cat /etc/httpd/conf.d/pxeboot.conf ... Alias /centos8 /mnt/centos8 <Directory /mnt/centos8> Options Indexes FollowSymLinks Require ip 127.0.0.1 192.168.20.0/24 </Directory> ...","title":"CentOS 8"},{"location":"Operating-Systems/Linux/pxe-centos/#vmware-esxi-60","text":"Source: Installing ESXi Using PXE Tested SYSLINUX versions: 3.86, 4.07 (with gpxelinux.0) Mount VMware ESXi 6.0 ISO: # cat /etc/fstab ... /var/iso/VMware-ESXi-6.0.0.iso /mnt/vmware-esxi-6 iso9660 loop,ro 0 0 # mkdir /var/lib/tftpboot/vmware-esxi-6 /mnt/vmware-esxi-6 # mount -a # cp /mnt/vmware-esxi-6/{mboot.c32,boot.cfg} /var/lib/tftpboot/vmware-esxi-6/ # vim /var/lib/tftpboot/vmware-esxi-6u3-hpe/boot.cfg Set prefix=http://192.168.20.50/vmware-esxi-6/ And remove \"/\" from kernel and modules Add menus to SYSLINUX: # cat /var/lib/tftpboot/syslinux/pxelinux.cfg/default ... label vwareesxi6 menu label Install VMware ESXi 6.0 kernel vmware-esxi-6/mboot.c32 append -c vmware-esxi-6/boot.cfg ipappend 2 label local ... Provide image files through Apache: # cat /etc/httpd/conf.d/pxeboot.conf ... Alias /vmware-esxi-6 /mnt/vmware-esxi-6 <Directory /mnt/vmware-esxi-6> Options Indexes FollowSymLinks Require ip 127.0.0.1 192.168.20.0/24 </Directory> ...","title":"VMware ESXi 6.0"},{"location":"Operating-Systems/Linux/setup-lvm/","text":"Setup LVM for Ubuntu Ubuntu Desktop installer doesn't allow to create a LVM installation manually. Therefore you have to setup LVM before starting the installer (i.ex: using the Try Ubuntu option). We are assuming the disk is /dev/nvme0n1 . Setup disk partitions 1) Zero the partition table $ sudo sgdisk -Z /dev/nvme0n1 2) Create partitions $ sudo sgdisk -n 1:0:+512M -t 1:ef00 -c \"1:EFI System\" /dev/nvme0n1 $ ls /dev/nvme0n1p1 $ sudo sgdisk -n 2:0:0 -t 2:8e00 -c \"2:Linux LVM\" /dev/nvme0n1 $ ls /dev/nvme0n1p2 Common partition types from archlinux wiki: GPT fdisk : ef00 : EFI System 8e00 : Linux LVM 3) Format EFI partition $ sudo mkfs.fat -F 32 /dev/nvme0n1p1 Setup LVM 1) Create a physical volume $ sudo pvcreate /dev/nvme0n1p2 2) Create a volume group $ sudo vgcreate vg0 /dev/nvme0n1p2 3) Create logical volumes $ sudo lvcreate -Z y -L 1GB --name boot vg0 $ sudo lvcreate -Z y -l 100%FREE --name root vg0","title":"Setup LVM for Ubuntu"},{"location":"Operating-Systems/Linux/setup-lvm/#setup-lvm-for-ubuntu","text":"Ubuntu Desktop installer doesn't allow to create a LVM installation manually. Therefore you have to setup LVM before starting the installer (i.ex: using the Try Ubuntu option). We are assuming the disk is /dev/nvme0n1 .","title":"Setup LVM for Ubuntu"},{"location":"Operating-Systems/Linux/setup-lvm/#setup-disk-partitions","text":"1) Zero the partition table $ sudo sgdisk -Z /dev/nvme0n1 2) Create partitions $ sudo sgdisk -n 1:0:+512M -t 1:ef00 -c \"1:EFI System\" /dev/nvme0n1 $ ls /dev/nvme0n1p1 $ sudo sgdisk -n 2:0:0 -t 2:8e00 -c \"2:Linux LVM\" /dev/nvme0n1 $ ls /dev/nvme0n1p2 Common partition types from archlinux wiki: GPT fdisk : ef00 : EFI System 8e00 : Linux LVM 3) Format EFI partition $ sudo mkfs.fat -F 32 /dev/nvme0n1p1","title":"Setup disk partitions"},{"location":"Operating-Systems/Linux/setup-lvm/#setup-lvm","text":"1) Create a physical volume $ sudo pvcreate /dev/nvme0n1p2 2) Create a volume group $ sudo vgcreate vg0 /dev/nvme0n1p2 3) Create logical volumes $ sudo lvcreate -Z y -L 1GB --name boot vg0 $ sudo lvcreate -Z y -l 100%FREE --name root vg0","title":"Setup LVM"},{"location":"Operating-Systems/VMware/esxi-installation/","text":"ESXi Links https://www.virtuallyghetto.com/2020/04/quick-tip-allow-unsupported-cpus-when-upgrading-to-esxi-7-0.html https://blog.monstermuffin.org/fixing-esxi-6-5-hpe-g7-servers/ https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.upgrade.doc/GUID-A4301ADA-8E02-459D-BF9D-0AD308DA5325.html https://www.vladan.fr/how-to-upgrade-esxi-6-0-to-6-5-via-cli-on-line/ HPE ESXi 7.0.0 U1 : https://my.vmware.com/en/group/vmware/downloads/details?downloadGroup=OEM-ESXI70U1-HPE&productId=974 ESXi 6.0.0 U3 : https://my.vmware.com/en/group/vmware/downloads/details?downloadGroup=OEM-ESXI60U3-HPE&productId=491","title":"ESXi Installation"},{"location":"Operating-Systems/VMware/esxi-installation/#esxi","text":"","title":"ESXi"},{"location":"Operating-Systems/VMware/esxi-installation/#links","text":"https://www.virtuallyghetto.com/2020/04/quick-tip-allow-unsupported-cpus-when-upgrading-to-esxi-7-0.html https://blog.monstermuffin.org/fixing-esxi-6-5-hpe-g7-servers/ https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.upgrade.doc/GUID-A4301ADA-8E02-459D-BF9D-0AD308DA5325.html https://www.vladan.fr/how-to-upgrade-esxi-6-0-to-6-5-via-cli-on-line/ HPE ESXi 7.0.0 U1 : https://my.vmware.com/en/group/vmware/downloads/details?downloadGroup=OEM-ESXI70U1-HPE&productId=974 ESXi 6.0.0 U3 : https://my.vmware.com/en/group/vmware/downloads/details?downloadGroup=OEM-ESXI60U3-HPE&productId=491","title":"Links"},{"location":"Operating-Systems/Windows/oem-product-key/","text":"from Linux # strings /sys/firmware/acpi/tables/MSDM | tail -1 from Windows wmic path softwarelicensingservice get OA3xOriginalProductKey Links https://www.cyberciti.biz/faq/linux-find-windows-10-oem-product-key-command/","title":"Retrieve Windows OEM Product Key"},{"location":"Operating-Systems/Windows/oem-product-key/#from-linux","text":"# strings /sys/firmware/acpi/tables/MSDM | tail -1","title":"from Linux"},{"location":"Operating-Systems/Windows/oem-product-key/#from-windows","text":"wmic path softwarelicensingservice get OA3xOriginalProductKey","title":"from Windows"},{"location":"Operating-Systems/Windows/oem-product-key/#links","text":"https://www.cyberciti.biz/faq/linux-find-windows-10-oem-product-key-command/","title":"Links"},{"location":"Operating-Systems/macOS/launchd/","text":"Job Definitions Job definitions crucial for the operation of the operating system are stored below /System/Library. You should never need to create a daemon or agent in these directories. Third-Party definitions which are relevant for every user are stored below /Library. Job definitions for a specific user are stored below the respective user's Library directory. Type Location Run on behalf of User Agents ~/Library/LaunchAgents Currently logged in user Global Agents /Library/LaunchAgents Currently logged in user Global Daemons /Library/LaunchDaemons root or the user specified with the key UserName System Agents /System/Library/LaunchAgents Currently logged in user System Daemons /System/Library/LaunchDaemons root or the user specified with the key UserName Links https://www.launchd.info","title":"Launchd"},{"location":"Operating-Systems/macOS/launchd/#job-definitions","text":"Job definitions crucial for the operation of the operating system are stored below /System/Library. You should never need to create a daemon or agent in these directories. Third-Party definitions which are relevant for every user are stored below /Library. Job definitions for a specific user are stored below the respective user's Library directory. Type Location Run on behalf of User Agents ~/Library/LaunchAgents Currently logged in user Global Agents /Library/LaunchAgents Currently logged in user Global Daemons /Library/LaunchDaemons root or the user specified with the key UserName System Agents /System/Library/LaunchAgents Currently logged in user System Daemons /System/Library/LaunchDaemons root or the user specified with the key UserName","title":"Job Definitions"},{"location":"Operating-Systems/macOS/launchd/#links","text":"https://www.launchd.info","title":"Links"},{"location":"Operating-Systems/macOS/homebrew/bundle/","text":"Homebrew Create from Installed packages $ brew leaves > brews.txt Install $ xargs brew install < brews.txt Homebrew Bundle Create from Installed packages $ brew bundle dump Install $ brew bundle or $ brew bundle --file ${FILE} Links https://github.com/Homebrew/homebrew-bundle https://apple.stackexchange.com/q/279077","title":"Homebre Bundle"},{"location":"Operating-Systems/macOS/homebrew/bundle/#homebrew","text":"","title":"Homebrew"},{"location":"Operating-Systems/macOS/homebrew/bundle/#create-from-installed-packages","text":"$ brew leaves > brews.txt","title":"Create from Installed packages"},{"location":"Operating-Systems/macOS/homebrew/bundle/#install","text":"$ xargs brew install < brews.txt","title":"Install"},{"location":"Operating-Systems/macOS/homebrew/bundle/#homebrew-bundle","text":"","title":"Homebrew Bundle"},{"location":"Operating-Systems/macOS/homebrew/bundle/#create-from-installed-packages_1","text":"$ brew bundle dump","title":"Create from Installed packages"},{"location":"Operating-Systems/macOS/homebrew/bundle/#install_1","text":"$ brew bundle or $ brew bundle --file ${FILE}","title":"Install"},{"location":"Operating-Systems/macOS/homebrew/bundle/#links","text":"https://github.com/Homebrew/homebrew-bundle https://apple.stackexchange.com/q/279077","title":"Links"}]}